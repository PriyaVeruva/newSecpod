{"ast":null,"code":"var _jsxFileName = \"/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx\";\nimport * as Yup from 'yup';\nimport { Field, Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nameSchema = Yup.string().matches(/^[a-zA-Z]+$/, 'Name should contain only alphabets');\nconst emailSchema = Yup.string().email('Invalid email address');\nconst mobileSchema = Yup.string().matches(/^(\\+?\\d{1,4}[\\s-])?(?!0+\\s+,?$)\\d{10}\\s*,?$/, 'Invalid mobile number');\nconst passwordSchema = Yup.string().min(6, 'Password should be at least 6 characters long');\nfunction validateField(value, schema) {\n  try {\n    schema.validateSync(value);\n  } catch (error) {\n    return error.message;\n  }\n}\nfunction InputField(_ref) {\n  let {\n    label,\n    field,\n    form: {\n      errors,\n      touched\n    }\n  } = _ref;\n  const error = errors[field.name];\n  const touch = touched[field.name];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: field.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: field.name,\n      id: field.name,\n      className: error && touch ? 'error' : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && touch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = InputField;\nfunction InputForm() {\n  const validationSchema = Yup.object({\n    name: nameSchema.required('Name is required'),\n    email: emailSchema.required('Email is required'),\n    mobile: mobileSchema.required('Mobile number is required'),\n    password: passwordSchema.required('Password is required')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: '',\n      email: '',\n      mobile: '',\n      password: ''\n    },\n    validationSchema: validationSchema,\n    children: () => /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Mobile\",\n        name: \"mobile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Password\",\n        name: \"password\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c2 = InputForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputField\");\n$RefreshReg$(_c2, \"InputForm\");","map":{"version":3,"names":["Yup","Field","Formik","jsxDEV","_jsxDEV","nameSchema","string","matches","emailSchema","email","mobileSchema","passwordSchema","min","validateField","value","schema","validateSync","error","message","InputField","_ref","label","field","form","errors","touched","name","touch","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","className","_c","InputForm","validationSchema","object","required","mobile","password","initialValues","type","_c2","$RefreshReg$"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx"],"sourcesContent":["import * as Yup from 'yup';\nimport { Field, FieldProps, Formik } from 'formik';\n\ninterface InputFieldProps extends FieldProps {\n  label: string;\n}\n\nconst nameSchema = Yup.string().matches(/^[a-zA-Z]+$/, 'Name should contain only alphabets');\nconst emailSchema = Yup.string().email('Invalid email address');\nconst mobileSchema = Yup.string().matches(/^(\\+?\\d{1,4}[\\s-])?(?!0+\\s+,?$)\\d{10}\\s*,?$/, 'Invalid mobile number');\nconst passwordSchema = Yup.string().min(6, 'Password should be at least 6 characters long');\n\nfunction validateField(value: string, schema: Yup.StringSchema): string | undefined {\n  try {\n    schema.validateSync(value);\n  } catch (error) {\n    return error.message;\n  }\n}\n\nfunction InputField({ label, field, form: { errors, touched } }: InputFieldProps) {\n  const error = errors[field.name];\n  const touch = touched[field.name];\n  return (\n    <div>\n      <label htmlFor={field.name}>{label}</label>\n      <Field name={field.name} id={field.name} className={error && touch ? 'error' : ''} />\n      {error && touch && <div className=\"error\">{error}</div>}\n    </div>\n  );\n}\n\nfunction InputForm() {\n  const validationSchema = Yup.object({\n    name: nameSchema.required('Name is required'),\n    email: emailSchema.required('Email is required'),\n    mobile: mobileSchema.required('Mobile number is required'),\n    password: passwordSchema.required('Password is required'),\n  });\n\n  return (\n    <Formik initialValues={{ name: '', email: '', mobile: '', password: '' }} validationSchema={validationSchema}>\n      {() => (\n        <form>\n          <InputField label=\"Name\" name=\"name\" />\n          <InputField label=\"Email\" name=\"email\" />\n          <InputField label=\"Mobile\" name=\"mobile\" />\n          <InputField label=\"Password\" name=\"password\" type=\"password\" />\n          <button type=\"submit\">Submit</button>\n        </form>\n      )}\n    </Formik>\n  );\n}\n"],"mappings":";AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,SAASC,KAAK,EAAcC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,UAAU,GAAGL,GAAG,CAACM,MAAM,EAAE,CAACC,OAAO,CAAC,aAAa,EAAE,oCAAoC,CAAC;AAC5F,MAAMC,WAAW,GAAGR,GAAG,CAACM,MAAM,EAAE,CAACG,KAAK,CAAC,uBAAuB,CAAC;AAC/D,MAAMC,YAAY,GAAGV,GAAG,CAACM,MAAM,EAAE,CAACC,OAAO,CAAC,6CAA6C,EAAE,uBAAuB,CAAC;AACjH,MAAMI,cAAc,GAAGX,GAAG,CAACM,MAAM,EAAE,CAACM,GAAG,CAAC,CAAC,EAAE,+CAA+C,CAAC;AAE3F,SAASC,aAAaA,CAACC,KAAa,EAAEC,MAAwB,EAAsB;EAClF,IAAI;IACFA,MAAM,CAACC,YAAY,CAACF,KAAK,CAAC;EAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOA,KAAK,CAACC,OAAO;EACtB;AACF;AAEA,SAASC,UAAUA,CAAAC,IAAA,EAA+D;EAAA,IAA9D;IAAEC,KAAK;IAAEC,KAAK;IAAEC,IAAI,EAAE;MAAEC,MAAM;MAAEC;IAAQ;EAAmB,CAAC,GAAAL,IAAA;EAC9E,MAAMH,KAAK,GAAGO,MAAM,CAACF,KAAK,CAACI,IAAI,CAAC;EAChC,MAAMC,KAAK,GAAGF,OAAO,CAACH,KAAK,CAACI,IAAI,CAAC;EACjC,oBACEtB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,OAAO,EAAEP,KAAK,CAACI,IAAK;MAAAE,QAAA,EAAEP;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3C7B,OAAA,CAACH,KAAK;MAACyB,IAAI,EAAEJ,KAAK,CAACI,IAAK;MAACQ,EAAE,EAAEZ,KAAK,CAACI,IAAK;MAACS,SAAS,EAAElB,KAAK,IAAIU,KAAK,GAAG,OAAO,GAAG;IAAG;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACpFhB,KAAK,IAAIU,KAAK,iBAAIvB,OAAA;MAAK+B,SAAS,EAAC,OAAO;MAAAP,QAAA,EAAEX;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAEV;AAACG,EAAA,GAVQjB,UAAU;AAYnB,SAASkB,SAASA,CAAA,EAAG;EACnB,MAAMC,gBAAgB,GAAGtC,GAAG,CAACuC,MAAM,CAAC;IAClCb,IAAI,EAAErB,UAAU,CAACmC,QAAQ,CAAC,kBAAkB,CAAC;IAC7C/B,KAAK,EAAED,WAAW,CAACgC,QAAQ,CAAC,mBAAmB,CAAC;IAChDC,MAAM,EAAE/B,YAAY,CAAC8B,QAAQ,CAAC,2BAA2B,CAAC;IAC1DE,QAAQ,EAAE/B,cAAc,CAAC6B,QAAQ,CAAC,sBAAsB;EAC1D,CAAC,CAAC;EAEF,oBACEpC,OAAA,CAACF,MAAM;IAACyC,aAAa,EAAE;MAAEjB,IAAI,EAAE,EAAE;MAAEjB,KAAK,EAAE,EAAE;MAAEgC,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAE;IAACJ,gBAAgB,EAAEA,gBAAiB;IAAAV,QAAA,EAC1GA,CAAA,kBACCxB,OAAA;MAAAwB,QAAA,gBACExB,OAAA,CAACe,UAAU;QAACE,KAAK,EAAC,MAAM;QAACK,IAAI,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvC7B,OAAA,CAACe,UAAU;QAACE,KAAK,EAAC,OAAO;QAACK,IAAI,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACzC7B,OAAA,CAACe,UAAU;QAACE,KAAK,EAAC,QAAQ;QAACK,IAAI,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC3C7B,OAAA,CAACe,UAAU;QAACE,KAAK,EAAC,UAAU;QAACK,IAAI,EAAC,UAAU;QAACkB,IAAI,EAAC;MAAU;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/D7B,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAhB,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAExC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEb;AAACY,GAAA,GArBQR,SAAS;AAAA,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}