{"ast":null,"code":"var _jsxFileName = \"/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport \"./SignUpForm.css\";\nimport { validateField, validationSchema } from \"./SignUpValidationSchema\";\nimport { TERMS_CONDITIONS } from \"../../utils/cms\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/ButtonComponent/ButtonComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserDetails } from \"../../redux/features/formSlice\";\nimport { FormFieldsData } from \"./data\";\nimport { StringSchema } from \"yup\";\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordField = () => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleTogglePassword = () => setShowPassword(!showPassword);\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    label: \"Password\",\n    type: showPassword ? 'text' : 'password',\n    InputProps: {\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleTogglePassword,\n          children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = PasswordField;\nexport default PasswordField;\nconst SignUpForm = () => {\n  _s2();\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.user);\n  console.log(formData, \"formData\");\n  const handleSubmit = (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    console.log(values, \"values\");\n    dispatch(setUserDetails(values));\n    resetForm();\n  };\n  // const handleClick = () => {\n  // \tnavigate(\"/getStartedNow\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUpFormContents\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: formData,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: _ref2 => {\n        let {\n          errors,\n          touched\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [FormFieldsData.map((ele, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                label: ele.label,\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"24px\",\n                    color: \"var(--darkPara)\",\n                    fontFamily: \"Futura-Medium\"\n                  }\n                },\n                name: ele.name,\n                as: TextField,\n                fullWidth: ele.fullWidth,\n                variant: ele.variant,\n                validate: validateField(ele.name, new StringSchema())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: ele.name,\n                component: \"div\",\n                className: \"error\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"termsConditions\",\n            children: TERMS_CONDITIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n            variant: \"contained\",\n            type: \"submit\",\n            fullWidth: true,\n            className: \"button\",\n            buttonText: \"GET STARTED NOW\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n_s2(SignUpForm, \"e/n/Bvk93IZcfKZXt0qm/mQbMqM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c2 = SignUpForm;\nexport default SignUpForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"PasswordField\");\n$RefreshReg$(_c2, \"SignUpForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","TextField","validateField","validationSchema","TERMS_CONDITIONS","useNavigate","ButtonComponent","useSelector","useDispatch","setUserDetails","FormFieldsData","StringSchema","IconButton","InputAdornment","Visibility","VisibilityOff","jsxDEV","_jsxDEV","PasswordField","_s","showPassword","setShowPassword","useState","handleTogglePassword","label","type","InputProps","endAdornment","position","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","SignUpForm","_s2","navigate","dispatch","formData","state","user","console","log","handleSubmit","values","_ref","resetForm","className","initialValues","onSubmit","_ref2","errors","touched","map","ele","i","InputLabelProps","style","fontSize","color","fontFamily","name","as","fullWidth","variant","validate","component","buttonText","_c2","$RefreshReg$"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport \"./SignUpForm.css\";\nimport { validateField, validationSchema } from \"./SignUpValidationSchema\";\nimport { TERMS_CONDITIONS } from \"../../utils/cms\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/ButtonComponent/ButtonComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserDetails, UserState } from \"../../redux/features/formSlice\";\nimport { FormFieldsData } from \"./data\";\nimport { StringSchema } from \"yup\";\n\n\n\n\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\n\nconst PasswordField = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleTogglePassword = () => setShowPassword(!showPassword);\n\n  return (\n    <TextField\n      label=\"Password\"\n      type={showPassword ? 'text' : 'password'}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleTogglePassword}>\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport default PasswordField;\n\nconst SignUpForm = () => {\n\tlet navigate = useNavigate();\n\tconst dispatch = useDispatch();\n\tconst formData = useSelector((state: any) => state.user);\n\tconsole.log(formData, \"formData\");\n\tconst handleSubmit = (\n\t\tvalues: UserState,\n\t\t{ resetForm }: FormikHelpers<UserState>\n\t) => {\n\t\tconsole.log(values, \"values\");\n\t\tdispatch(setUserDetails(values));\n\t\tresetForm();\n\t};\n\t// const handleClick = () => {\n\t// \tnavigate(\"/getStartedNow\");\n\t// };\n\n\treturn (\n\t\t<div className=\"signUpFormContents\">\n\t\t\t<Formik\n\t\t\t\tinitialValues={formData}\n\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n\t\t\t\t{({ errors, touched }) => (\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t{FormFieldsData.map((ele, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\t\t\tlabel={ele.label}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"24px\",\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"var(--darkPara)\",\n\t\t\t\t\t\t\t\t\t\t\t\tfontFamily:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"Futura-Medium\",\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tname={ele.name}\n\t\t\t\t\t\t\t\t\t\tas={TextField}\n\t\t\t\t\t\t\t\t\t\tfullWidth={ele.fullWidth}\n\t\t\t\t\t\t\t\t\t\tvariant={ele.variant}\n\t\t\t\t\t\t\t\t\t\tvalidate={validateField(\n\t\t\t\t\t\t\t\t\t\t\tele.name,\n\t\t\t\t\t\t\t\t\t\t\tnew StringSchema()\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ErrorMessage\n\t\t\t\t\t\t\t\t\t\tname={ele.name}\n\t\t\t\t\t\t\t\t\t\tcomponent=\"div\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"error\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t<div className=\"termsConditions\">\n\t\t\t\t\t\t\t{TERMS_CONDITIONS}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\tbuttonText={\"GET STARTED NOW\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n};\n\nexport default SignUpForm;\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAuB,QAAQ;AACzE,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAO,kBAAkB;AACzB,SAASC,aAAa,EAAEC,gBAAgB,QAAQ,0BAA0B;AAC1E,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAmB,gCAAgC;AAC1E,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,YAAY,QAAQ,KAAK;AAKlC,SAASC,UAAU,EAAEC,cAAc,QAAQ,mBAAmB;AAC9D,SAASC,UAAU,EAAEC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMC,oBAAoB,GAAGA,CAAA,KAAMF,eAAe,CAAC,CAACD,YAAY,CAAC;EAEjE,oBACEH,OAAA,CAAChB,SAAS;IACRuB,KAAK,EAAC,UAAU;IAChBC,IAAI,EAAEL,YAAY,GAAG,MAAM,GAAG,UAAW;IACzCM,UAAU,EAAE;MACVC,YAAY,eACVV,OAAA,CAACJ,cAAc;QAACe,QAAQ,EAAC,KAAK;QAAAC,QAAA,eAC5BZ,OAAA,CAACL,UAAU;UAACkB,OAAO,EAAEP,oBAAqB;UAAAM,QAAA,EACvCT,YAAY,gBAAGH,OAAA,CAACF,aAAa;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,gBAAGjB,OAAA,CAACH,UAAU;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACvC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAGnB;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEN,CAAC;AAACf,EAAA,CAnBID,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAqBnB,eAAeA,aAAa;AAE5B,MAAMkB,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACxB,IAAIC,QAAQ,GAAGjC,WAAW,EAAE;EAC5B,MAAMkC,QAAQ,GAAG/B,WAAW,EAAE;EAC9B,MAAMgC,QAAQ,GAAGjC,WAAW,CAAEkC,KAAU,IAAKA,KAAK,CAACC,IAAI,CAAC;EACxDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,EAAE,UAAU,CAAC;EACjC,MAAMK,YAAY,GAAGA,CACpBC,MAAiB,EAAAC,IAAA,KAEb;IAAA,IADJ;MAAEC;IAAoC,CAAC,GAAAD,IAAA;IAEvCJ,OAAO,CAACC,GAAG,CAACE,MAAM,EAAE,QAAQ,CAAC;IAC7BP,QAAQ,CAAC9B,cAAc,CAACqC,MAAM,CAAC,CAAC;IAChCE,SAAS,EAAE;EACZ,CAAC;EACD;EACA;EACA;;EAEA,oBACC/B,OAAA;IAAKgC,SAAS,EAAC,oBAAoB;IAAApB,QAAA,eAClCZ,OAAA,CAACpB,MAAM;MACNqD,aAAa,EAAEV,QAAS;MACxBrC,gBAAgB,EAAEA,gBAAiB;MACnCgD,QAAQ,EAAEN,YAAa;MAAAhB,QAAA,EAEtBuB,KAAA;QAAA,IAAC;UAAEC,MAAM;UAAEC;QAAQ,CAAC,GAAAF,KAAA;QAAA,oBACpBnC,OAAA,CAACnB,IAAI;UAAA+B,QAAA,GACHnB,cAAc,CAAC6C,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;YAC/B,oBACCxC,OAAA;cAAAY,QAAA,gBACCZ,OAAA,CAAClB,KAAK;gBACLyB,KAAK,EAAEgC,GAAG,CAAChC,KAAM;gBACjBkC,eAAe,EAAE;kBAChBC,KAAK,EAAE;oBACNC,QAAQ,EAAE,MAAM;oBAChBC,KAAK,EAAE,iBAAiB;oBACxBC,UAAU,EACT;kBACF;gBACD,CAAE;gBACFC,IAAI,EAAEP,GAAG,CAACO,IAAK;gBACfC,EAAE,EAAE/D,SAAU;gBACdgE,SAAS,EAAET,GAAG,CAACS,SAAU;gBACzBC,OAAO,EAAEV,GAAG,CAACU,OAAQ;gBACrBC,QAAQ,EAAEjE,aAAa,CACtBsD,GAAG,CAACO,IAAI,EACR,IAAIpD,YAAY,EAAE;cACjB;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACD,eACFjB,OAAA,CAACjB,YAAY;gBACZ+D,IAAI,EAAEP,GAAG,CAACO,IAAK;gBACfK,SAAS,EAAC,KAAK;gBACfnB,SAAS,EAAC;cAAO;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAChB;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACG;UAER,CAAC,CAAC,eAEFjB,OAAA;YAAKgC,SAAS,EAAC,iBAAiB;YAAApB,QAAA,EAC9BzB;UAAgB;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACZ,eACNjB,OAAA,CAACX,eAAe;YACf4D,OAAO,EAAC,WAAW;YACnBzC,IAAI,EAAC,QAAQ;YACbwC,SAAS,EAAE,IAAK;YAChBhB,SAAS,EAAC,QAAQ;YAClBoB,UAAU,EAAE;UAAkB;YAAAtC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC7B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI;MAAA;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAER,CAAC;AAACG,GAAA,CAxEID,UAAU;EAAA,QACA/B,WAAW,EACTG,WAAW,EACXD,WAAW;AAAA;AAAA+D,GAAA,GAHvBlC,UAAU;AA0EhB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAmC,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}