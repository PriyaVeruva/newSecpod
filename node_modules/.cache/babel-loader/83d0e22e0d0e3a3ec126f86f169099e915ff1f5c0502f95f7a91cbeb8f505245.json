{"ast":null,"code":"import * as Yup from \"yup\";\nconst nameSchema = Yup.string().matches(/^[a-z A-Z]+$/, \"Name should contain only alphabets\");\nconst emailSchema = Yup.string().matches(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, \"Invalid email address\");\nconst mobileSchema = Yup.string().matches(/^(\\+?\\d{1,4}[\\s-])?(?!0+\\s+,?$)\\d{10}\\s*,?$/, \"Invalid mobile number\");\nconst passwordSchema = Yup.string().min(8, \"Password should be at least 8 characters long\");\nexport function validateField(value, schema) {\n  try {\n    schema.validateSync(value);\n  } catch (error) {\n    return error.message;\n  }\n}\nexport const validationSchema = Yup.object({\n  name: nameSchema.required(\"Name is required\"),\n  email: emailSchema.required(\"Email is required\"),\n  phoneNumber: mobileSchema.required(\"Mobile number is required\"),\n  password: passwordSchema.required(\"Password is required\"),\n  companyName: Yup.string().required(\"company name is required\")\n});","map":{"version":3,"names":["Yup","nameSchema","string","matches","emailSchema","mobileSchema","passwordSchema","min","validateField","value","schema","validateSync","error","message","validationSchema","object","name","required","email","phoneNumber","password","companyName"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpValidationSchema.tsx"],"sourcesContent":["import * as Yup from \"yup\";\nconst nameSchema = Yup.string().matches(\n\t/^[a-z A-Z]+$/,\n\t\"Name should contain only alphabets\"\n);\nconst emailSchema = Yup.string().matches(\n\t/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n\t\"Invalid email address\"\n);\nconst mobileSchema = Yup.string().matches(\n\t/^(\\+?\\d{1,4}[\\s-])?(?!0+\\s+,?$)\\d{10}\\s*,?$/,\n\t\"Invalid mobile number\"\n);\nconst passwordSchema = Yup.string().min(\n\t8,\n\t\"Password should be at least 8 characters long\"\n);\nexport function validateField(\n\tvalue: string,\n\tschema: Yup.StringSchema\n): string | undefined {\n\ttry {\n\t\tschema.validateSync(value);\n\t} catch (error: any) {\n\t\treturn error.message;\n\t}\n}\nexport const validationSchema = Yup.object({\n\tname: nameSchema.required(\"Name is required\"),\n\temail: emailSchema.required(\"Email is required\"),\n\tphoneNumber: mobileSchema.required(\"Mobile number is required\"),\n\tpassword: passwordSchema.required(\"Password is required\"),\n\tcompanyName: Yup.string().required(\"company name is required\"),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAC1B,MAAMC,UAAU,GAAGD,GAAG,CAACE,MAAM,EAAE,CAACC,OAAO,CACtC,cAAc,EACd,oCAAoC,CACpC;AACD,MAAMC,WAAW,GAAGJ,GAAG,CAACE,MAAM,EAAE,CAACC,OAAO,CACvC,kCAAkC,EAClC,uBAAuB,CACvB;AACD,MAAME,YAAY,GAAGL,GAAG,CAACE,MAAM,EAAE,CAACC,OAAO,CACxC,6CAA6C,EAC7C,uBAAuB,CACvB;AACD,MAAMG,cAAc,GAAGN,GAAG,CAACE,MAAM,EAAE,CAACK,GAAG,CACtC,CAAC,EACD,+CAA+C,CAC/C;AACD,OAAO,SAASC,aAAaA,CAC5BC,KAAa,EACbC,MAAwB,EACH;EACrB,IAAI;IACHA,MAAM,CAACC,YAAY,CAACF,KAAK,CAAC;EAC3B,CAAC,CAAC,OAAOG,KAAU,EAAE;IACpB,OAAOA,KAAK,CAACC,OAAO;EACrB;AACD;AACA,OAAO,MAAMC,gBAAgB,GAAGd,GAAG,CAACe,MAAM,CAAC;EAC1CC,IAAI,EAAEf,UAAU,CAACgB,QAAQ,CAAC,kBAAkB,CAAC;EAC7CC,KAAK,EAAEd,WAAW,CAACa,QAAQ,CAAC,mBAAmB,CAAC;EAChDE,WAAW,EAAEd,YAAY,CAACY,QAAQ,CAAC,2BAA2B,CAAC;EAC/DG,QAAQ,EAAEd,cAAc,CAACW,QAAQ,CAAC,sBAAsB,CAAC;EACzDI,WAAW,EAAErB,GAAG,CAACE,MAAM,EAAE,CAACe,QAAQ,CAAC,0BAA0B;AAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}