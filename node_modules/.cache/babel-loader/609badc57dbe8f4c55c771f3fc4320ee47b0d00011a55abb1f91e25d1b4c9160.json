{"ast":null,"code":"var _jsxFileName = \"/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport { object, string } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = object({\n  name: string().required(\"Name is required\"),\n  email: string().email(\"Invalid email address\").required(\"Email is required\"),\n  password: string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\")\n});\nconst SignupForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => console.log(values),\n      children: _ref => {\n        let {\n          errors,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            as: TextField,\n            label: \"Name\",\n            error: errors.name && touched.name,\n            helperText: errors.name && touched.name && errors.name,\n            variant: \"outlined\",\n            fullWidth: true,\n            InputLabelProps: {\n              style: {\n                fontSize: \"24px\",\n                color: \"var(--darkPara)\",\n                fontFamily: \"Futura-Medium\"\n              }\n            },\n            InputProps: {\n              style: {\n                borderColor: errors.name && touched.name ? \"red\" : null\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"email\",\n            as: TextField,\n            label: \"Email\",\n            error: errors.email && touched.email,\n            helperText: errors.email && touched.email && errors.email,\n            variant: \"outlined\",\n            fullWidth: true,\n            InputLabelProps: {\n              style: {\n                fontSize: \"24px\",\n                color: \"var(--darkPara)\",\n                fontFamily: \"Futura-Medium\"\n              }\n            },\n            InputProps: {\n              style: {\n                borderColor: errors.email && touched.email ? \"red\" : null\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            as: TextField,\n            label: \"Password\",\n            error: errors.password && touched.password,\n            helperText: errors.password && touched.password && errors.password,\n            variant: \"outlined\",\n            fullWidth: true,\n            InputLabelProps: {\n              style: {\n                fontSize: \"24px\",\n                color: \"var(--darkPara)\",\n                fontFamily: \"Futura-Medium\"\n              }\n            },\n            InputProps: {\n              style: {\n                borderColor: errors.password && touched.password ? \"red\" : null\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"div\",\n            className: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","TextField","object","string","jsxDEV","_jsxDEV","validationSchema","name","required","email","password","min","SignupForm","children","initialValues","onSubmit","values","console","log","_ref","errors","touched","as","label","error","helperText","variant","fullWidth","InputLabelProps","style","fontSize","color","fontFamily","InputProps","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","component","className","type","_c","$RefreshReg$"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport { object, string } from \"yup\";\n\nconst validationSchema = object({\n  name: string().required(\"Name is required\"),\n  email: string().email(\"Invalid email address\").required(\"Email is required\"),\n  password: string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\"),\n});\n\nconst SignupForm = () => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ name: \"\", email: \"\", password: \"\" }}\n        validationSchema={validationSchema}\n        onSubmit={(values) => console.log(values)}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            <Field\n              name=\"name\"\n              as={TextField}\n              label=\"Name\"\n              error={errors.name && touched.name}\n              helperText={errors.name && touched.name && errors.name}\n              variant=\"outlined\"\n              fullWidth\n              InputLabelProps={{ style: { fontSize: \"24px\", color: \"var(--darkPara)\", fontFamily: \"Futura-Medium\" } }}\n              InputProps={{ style: { borderColor: errors.name && touched.name ? \"red\" : null } }}\n            />\n            <ErrorMessage name=\"name\" component=\"div\" className=\"error\" />\n\n            <Field\n              name=\"email\"\n              as={TextField}\n              label=\"Email\"\n              error={errors.email && touched.email}\n              helperText={errors.email && touched.email && errors.email}\n              variant=\"outlined\"\n              fullWidth\n              InputLabelProps={{ style: { fontSize: \"24px\", color: \"var(--darkPara)\", fontFamily: \"Futura-Medium\" } }}\n              InputProps={{ style: { borderColor: errors.email && touched.email ? \"red\" : null } }}\n            />\n            <ErrorMessage name=\"email\" component=\"div\" className=\"error\" />\n\n            <Field\n              name=\"password\"\n              as={TextField}\n              label=\"Password\"\n              error={errors.password && touched.password}\n              helperText={errors.password && touched.password && errors.password}\n              variant=\"outlined\"\n              fullWidth\n              InputLabelProps={{ style: { fontSize: \"24px\", color: \"var(--darkPara)\", fontFamily: \"Futura-Medium\" } }}\n              InputProps={{ style: { borderColor: errors.password && touched.password ? \"red\" : null } }}\n            />\n            <ErrorMessage name=\"password\" component=\"div\" className=\"error\" />\n\n            <button type=\"submit\">Submit</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}