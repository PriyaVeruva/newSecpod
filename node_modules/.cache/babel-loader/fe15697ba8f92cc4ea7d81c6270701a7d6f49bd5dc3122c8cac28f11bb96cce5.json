{"ast":null,"code":"var _jsxFileName = \"/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport \"./SignUpForm.css\";\nimport { validationSchema } from \"./SignUpValidationSchema\";\nimport { TERMS_CONDITIONS } from \"../../utils/cms\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/ButtonComponent/ButtonComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserDetails } from \"../../redux/features/formSlice\";\nimport { FormFieldsData } from \"./data\";\nimport { StringSchema } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = () => {\n  _s();\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.user);\n  const handleSubmit = (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    console.log(values, \"values\");\n    dispatch(setUserDetails(values));\n    resetForm();\n  };\n  const validateField = (fieldName, schema) => value => {\n    try {\n      schema.validateSync(value);\n    } catch (error) {\n      return error.message;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUpFormContents\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: formData,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: _ref2 => {\n        let {\n          touched,\n          errors: Boolean\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [FormFieldsData.map((ele, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Field, {\n              label: ele.label,\n              InputLabelProps: {\n                style: {\n                  fontSize: \"24px\",\n                  color: \"var(--darkPara)\",\n                  fontFamily: \"Futura-Medium\"\n                }\n              },\n              name: ele.name,\n              as: TextField,\n              fullWidth: ele.fullWidth,\n              variant: ele.variant,\n              error: touched[ele.name] && Boolean(errors[ele.name]),\n              helperText: touched[ele.name] && errors[ele.name],\n              validate: validateField(ele.name, new StringSchema()),\n              InputProps: {\n                classes: {\n                  root: \"MuiOutlinedInput-root\",\n                  focused: \"Mui-focused\",\n                  notchedOutline: \"Mui-notchedOutline\",\n                  error: \"Mui-error\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"termsConditions\",\n            children: TERMS_CONDITIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n            variant: \"contained\",\n            type: \"submit\",\n            fullWidth: true,\n            className: \"button\",\n            buttonText: \"GET STARTED NOW\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"e/n/Bvk93IZcfKZXt0qm/mQbMqM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","Formik","Form","Field","TextField","validationSchema","TERMS_CONDITIONS","useNavigate","ButtonComponent","useSelector","useDispatch","setUserDetails","FormFieldsData","StringSchema","jsxDEV","_jsxDEV","SignUpForm","_s","navigate","dispatch","formData","state","user","handleSubmit","values","_ref","resetForm","console","log","validateField","fieldName","schema","value","validateSync","error","message","className","children","initialValues","onSubmit","_ref2","touched","errors","Boolean","map","ele","i","label","InputLabelProps","style","fontSize","color","fontFamily","name","as","fullWidth","variant","helperText","validate","InputProps","classes","root","focused","notchedOutline","fileName","_jsxFileName","lineNumber","columnNumber","type","buttonText","_c","$RefreshReg$"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport \"./SignUpForm.css\";\nimport { validationSchema } from \"./SignUpValidationSchema\";\nimport { TERMS_CONDITIONS } from \"../../utils/cms\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/ButtonComponent/ButtonComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserDetails, UserState } from \"../../redux/features/formSlice\";\nimport { FormFieldsData } from \"./data\";\nimport { StringSchema } from \"yup\";\n\nconst SignUpForm = () => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formData = useSelector((state: any) => state.user);\n  const handleSubmit = (\n    values: UserState,\n    { resetForm }: FormikHelpers<UserState>\n  ) => {\n    console.log(values, \"values\");\n    dispatch(setUserDetails(values));\n    resetForm();\n  };\n\n  const validateField = (fieldName: string, schema: StringSchema) => (\n    value: string\n  ) => {\n    try {\n      schema.validateSync(value);\n    } catch (error:any) {\n      return error.message;\n    }\n  };\n\n  return (\n    <div className=\"signUpFormContents\">\n      <Formik\n        initialValues={formData}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ touched, errors:Boolean }) => (\n          <Form>\n            {FormFieldsData.map((ele, i) => (\n              <div key={i}>\n                <Field\n                  label={ele.label}\n                  InputLabelProps={{\n                    style: {\n                      fontSize: \"24px\",\n                      color: \"var(--darkPara)\",\n                      fontFamily: \"Futura-Medium\"\n                    }\n                  }}\n                  name={ele.name}\n                  as={TextField}\n                  fullWidth={ele.fullWidth}\n                  variant={ele.variant}\n                  error={touched[ele.name] && Boolean(errors[ele.name])}\n                  helperText={touched[ele.name] && errors[ele.name]}\n                  validate={validateField(ele.name, new StringSchema())}\n                  InputProps={{\n                    classes: {\n                      root: \"MuiOutlinedInput-root\",\n                      focused: \"Mui-focused\",\n                      notchedOutline: \"Mui-notchedOutline\",\n                      error: \"Mui-error\"\n                    }\n                  }}\n                />\n              </div>\n            ))}\n\n            <div className=\"termsConditions\">{TERMS_CONDITIONS}</div>\n            <ButtonComponent\n              variant=\"contained\"\n              type=\"submit\"\n              fullWidth={true}\n              className=\"button\"\n              buttonText={\"GET STARTED NOW\"}\n            />\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}