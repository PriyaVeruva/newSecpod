{"ast":null,"code":"import axios from \"axios\";\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport { SIGNUP_API } from \"../config /config\";\nimport { setUserDetails, setSuccessData } from \"../redux/features/formSlice\";\nfunction* userSaga(action) {\n  try {\n    const response = yield call(axios.post, SIGNUP_API, action.payload);\n    const responseData = yield response.data;\n    console.log(responseData, \"responseData\");\n    yield put(setSuccessData(responseData));\n  } catch (error) {\n    console.log(error.message, \"error\");\n    yield put(responseData);\n  }\n}\nfunction* rootSaga() {\n  yield takeEvery(setUserDetails, userSaga);\n  // to make multiple api calls declare the action and decalre function and inside function make over the api call\n}\n\nexport default rootSaga;","map":{"version":3,"names":["axios","takeEvery","call","put","SIGNUP_API","setUserDetails","setSuccessData","userSaga","action","response","post","payload","responseData","data","console","log","error","message","rootSaga"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/reduxsaga/userSaga.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { takeEvery, call, put } from \"redux-saga/effects\";\nimport { SIGNUP_API } from \"../config /config\";\nimport { setUserDetails, setSuccessData } from \"../redux/features/formSlice\";\ninterface responseData {\n\tdata: any;\n}\nfunction* userSaga(action: any) {\n\ttry {\n\t\tconst response: responseData = yield call(\n\t\t\taxios.post,\n\t\t\tSIGNUP_API,\n\t\t\taction.payload\n\t\t);\n\t\tconst responseData: responseData = yield response.data;\n\t\tconsole.log(responseData, \"responseData\");\n\n\t\tyield put(setSuccessData(responseData));\n\t} catch (error: any) {\n\t\tconsole.log(error.message, \"error\");\n\t\tyield put((responseData));\n\n\t}\n}\nfunction* rootSaga() {\n\tyield takeEvery(setUserDetails, userSaga);\n\t// to make multiple api calls declare the action and decalre function and inside function make over the api call\n}\nexport default rootSaga;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AACzD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,cAAc,EAAEC,cAAc,QAAQ,6BAA6B;AAI5E,UAAUC,QAAQA,CAACC,MAAW,EAAE;EAC/B,IAAI;IACH,MAAMC,QAAsB,GAAG,MAAMP,IAAI,CACxCF,KAAK,CAACU,IAAI,EACVN,UAAU,EACVI,MAAM,CAACG,OAAO,CACd;IACD,MAAMC,YAA0B,GAAG,MAAMH,QAAQ,CAACI,IAAI;IACtDC,OAAO,CAACC,GAAG,CAACH,YAAY,EAAE,cAAc,CAAC;IAEzC,MAAMT,GAAG,CAACG,cAAc,CAACM,YAAY,CAAC,CAAC;EACxC,CAAC,CAAC,OAAOI,KAAU,EAAE;IACpBF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,EAAE,OAAO,CAAC;IACnC,MAAMd,GAAG,CAAES,YAAY,CAAE;EAE1B;AACD;AACA,UAAUM,QAAQA,CAAA,EAAG;EACpB,MAAMjB,SAAS,CAACI,cAAc,EAAEE,QAAQ,CAAC;EACzC;AACD;;AACA,eAAeW,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}