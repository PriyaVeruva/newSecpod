{"ast":null,"code":"import * as Yup from \"yup\";\nconst validationSchema = Yup.object({\n  name: Yup.string().matches(/^[a-zA-Z]+$/, 'Name should contain only alphabets'),\n  email: Yup.string().email('Invalid email'),\n  mobileNumber: Yup.string().matches(/^[0-9]{10}$/, 'Invalid mobile number'),\n  password: Yup.string().min(8, 'Password should be at least 8 characters long'),\n  companyName: Yup.string().required(\"Company Name  Required\")\n});\nexport function validateField(name, value) {\n  try {\n    validationSchema[name].validateSync(value);\n  } catch (error) {\n    return error.message;\n  }\n}","map":{"version":3,"names":["Yup","validationSchema","object","name","string","matches","email","mobileNumber","password","min","companyName","required","validateField","value","validateSync","error","message"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpValidationSchema.tsx"],"sourcesContent":["import * as Yup from \"yup\";\n const validationSchema =Yup.object ({\n    name: Yup.string().matches(/^[a-zA-Z]+$/, 'Name should contain only alphabets'),\n    email: Yup.string().email('Invalid email'),\n    mobileNumber: Yup.string().matches(/^[0-9]{10}$/, 'Invalid mobile number'),\n    password: Yup.string().min(8, 'Password should be at least 8 characters long'),\n    companyName: Yup.string().required(\"Company Name  Required\"),\n\n  });\n  \n  export function validateField(name: string, value: string) {\n    try {\n      validationSchema[name].validateSync(value);\n    } catch (error:any) {\n      return error.message;\n    }\n  }"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AACzB,MAAMC,gBAAgB,GAAED,GAAG,CAACE,MAAM,CAAE;EACjCC,IAAI,EAAEH,GAAG,CAACI,MAAM,EAAE,CAACC,OAAO,CAAC,aAAa,EAAE,oCAAoC,CAAC;EAC/EC,KAAK,EAAEN,GAAG,CAACI,MAAM,EAAE,CAACE,KAAK,CAAC,eAAe,CAAC;EAC1CC,YAAY,EAAEP,GAAG,CAACI,MAAM,EAAE,CAACC,OAAO,CAAC,aAAa,EAAE,uBAAuB,CAAC;EAC1EG,QAAQ,EAAER,GAAG,CAACI,MAAM,EAAE,CAACK,GAAG,CAAC,CAAC,EAAE,+CAA+C,CAAC;EAC9EC,WAAW,EAAEV,GAAG,CAACI,MAAM,EAAE,CAACO,QAAQ,CAAC,wBAAwB;AAE7D,CAAC,CAAC;AAEF,OAAO,SAASC,aAAaA,CAACT,IAAY,EAAEU,KAAa,EAAE;EACzD,IAAI;IACFZ,gBAAgB,CAACE,IAAI,CAAC,CAACW,YAAY,CAACD,KAAK,CAAC;EAC5C,CAAC,CAAC,OAAOE,KAAS,EAAE;IAClB,OAAOA,KAAK,CAACC,OAAO;EACtB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}