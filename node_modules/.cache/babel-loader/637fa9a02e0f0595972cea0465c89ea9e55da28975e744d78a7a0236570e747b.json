{"ast":null,"code":"var _jsxFileName = \"/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport \"./SignUpForm.css\";\nimport { validateField, validationSchema } from \"./SignUpValidationSchema\";\nimport { TERMS_CONDITIONS } from \"../../utils/cms\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/ButtonComponent/ButtonComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserDetails } from \"../../redux/features/formSlice\";\nimport { FormFieldsData } from \"./data\";\nimport { StringSchema } from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpForm = () => {\n  _s();\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.user);\n  console.log(formData, \"formData\");\n  const handleSubmit = (values, _ref) => {\n    let {\n      resetForm\n    } = _ref;\n    console.log(values, \"values\");\n    dispatch(setUserDetails(values));\n    resetForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUpFormContents\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: formData,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [FormFieldsData.map((ele, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              label: ele.label,\n              InputLabelProps: {\n                style: {\n                  fontSize: \"24px\",\n                  color: \"var(--darkPara)\",\n                  fontFamily: \"Futura-Medium\"\n                }\n              },\n              name: ele.name,\n              as: TextField,\n              fullWidth: ele.fullWidth,\n              variant: ele.variant,\n              validate: validateField(ele.name, new StringSchema()),\n              error: !!(\n              // check if the field has been touched and if it has an error message\n              ele.name in formData.errors && formData.touched[ele.name])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: ele.name,\n              component: \"div\",\n              className: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, ele.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"termsConditions\",\n          children: TERMS_CONDITIONS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonComponent, {\n          variant: \"contained\",\n          type: \"submit\",\n          fullWidth: true,\n          className: \"button\",\n          buttonText: \"GET STARTED NOW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"e/n/Bvk93IZcfKZXt0qm/mQbMqM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","TextField","validateField","validationSchema","TERMS_CONDITIONS","useNavigate","ButtonComponent","useSelector","useDispatch","setUserDetails","FormFieldsData","StringSchema","jsxDEV","_jsxDEV","SignUpForm","_s","navigate","dispatch","formData","state","user","console","log","handleSubmit","values","_ref","resetForm","className","children","initialValues","onSubmit","map","ele","i","label","InputLabelProps","style","fontSize","color","fontFamily","name","as","fullWidth","variant","validate","error","errors","touched","fileName","_jsxFileName","lineNumber","columnNumber","component","type","buttonText","_c","$RefreshReg$"],"sources":["/home/emproto/Desktop/SecpodProject/newsecpod/src/pages/SignUpFormik/SignUpForm.tsx"],"sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from \"formik\";\nimport { TextField } from \"@mui/material\";\nimport \"./SignUpForm.css\";\nimport { validateField, validationSchema } from \"./SignUpValidationSchema\";\nimport { TERMS_CONDITIONS } from \"../../utils/cms\";\nimport { useNavigate } from \"react-router-dom\";\nimport ButtonComponent from \"../../components/ButtonComponent/ButtonComponent\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setUserDetails, UserState } from \"../../redux/features/formSlice\";\nimport { FormFieldsData } from \"./data\";\nimport { StringSchema } from \"yup\";\n\nconst SignUpForm = () => {\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const formData = useSelector((state: any) => state.user);\n  console.log(formData, \"formData\");\n  const handleSubmit = (\n    values: UserState,\n    { resetForm }: FormikHelpers<UserState>\n  ) => {\n    console.log(values, \"values\");\n    dispatch(setUserDetails(values));\n    resetForm();\n  };\n\n  return (\n    <div className=\"signUpFormContents\">\n      <Formik\n        initialValues={formData}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          {FormFieldsData.map((ele, i) => {\n            return (\n              <div key={ele.name}>\n                <Field\n                  label={ele.label}\n                  InputLabelProps={{\n                    style: {\n                      fontSize: \"24px\",\n                      color: \"var(--darkPara)\",\n                      fontFamily: \"Futura-Medium\",\n                    },\n                  }}\n                  name={ele.name}\n                  as={TextField}\n                  fullWidth={ele.fullWidth}\n                  variant={ele.variant}\n                  validate={validateField(\n                    ele.name,\n                    new StringSchema()\n                  )}\n                  error={!!(\n                    // check if the field has been touched and if it has an error message\n                    ele.name in formData.errors && formData.touched[ele.name]\n                  )}\n                />\n                <ErrorMessage\n                  name={ele.name}\n                  component=\"div\"\n                  className=\"error\"\n                />\n              </div>\n            );\n          })}\n\n          <div className=\"termsConditions\">{TERMS_CONDITIONS}</div>\n          <ButtonComponent\n            variant=\"contained\"\n            type=\"submit\"\n            fullWidth={true}\n            className=\"button\"\n            buttonText={\"GET STARTED NOW\"}\n          />\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}